(function () {
  'use strict';

  function getMax(data, field) {
    let max = 0;
    data.forEach((d) => {
      if (d[field] > max) max = d[field];
    });
    return max;
  }

  function format(val) {
    if (val / 1000000000 > 1) {
      // Billions
      return `\$${Math.round(val / 100000000) / 10}B`;
    } else if (val / 1000000 > 1) {
      // Millions
      return `\$${Math.round(val / 100000) / 10}M`;
    }
    // Thousands
    return `\$${Math.round(val / 100) / 10}K`;
  }

  /**
   *
   * @param {[]} data Requires data = [{ label: "BlackRock", value: 1533193730.0 }, ...]
   */

  function sidebar(data, maxValue) {
    let chart = document.createElement("ol");
    chart.classList.add("sidebar");
    let max;
    if (!maxValue) {
      max = getMax(data, "value");
    } else {
      max = maxValue;
    }
    data.forEach((d) => {
      const row = document.createElement("li");
      row.classList.add("sidebar__row");
      if (d.highlight) row.classList.add("sidebar__row--highlight");
      const width = Math.round((d.value / max) * 100);
      let labelClass = width <= 50 ? "sidebar__bar--label-outside" : "";
      row.innerHTML = `<p class="sidebar__label"><a class="profile-link" href="#">${d.label}</a></p>
    <div class="sidebar__bar ${labelClass}">
      <div style="width:${width}%;" class="sidebar__bar-inner">
        <span>${format(d.value)}</span>
      </div>
    </div>`;
      chart.appendChild(row);
    });

    return chart;
  }

  document.addEventListener("DOMContentLoaded", function (e) {
    const data = [
      {
        label: "Batu Kawan",
        data: [
          {
            label: "Borneo Taiko Clay Sdn Bhd.",
            value: 1760000000,
          },
          {
            label: "Kuala Lumpur Kepong",
            value: 1500000000,
            highlight: true,
          },
          {
            label: "TMK PJSC",
            value: 995000000,
          },
          {
            label: "Mitsubishi Gas Chemical",
            value: 450000000,
          },
          {
            label: "Astra Agro",
            value: 104000000,
          },
        ],
      },
      {
        label: "Astra Agro",
        data: [
          {
            label: "Astra Graphia Tbk.",
            value: 1760000000,
          },
          {
            label: "Astra International",
            value: 1650000000,
          },
          {
            label: "Astra Otoparts Tbk",
            value: 400000000,
          },
          {
            label: "Grokul Agro Resources",
            value: 200000000,
          },
          {
            label: "Eagle High Plantations",
            value: 124000000,
            highlight: true,
          },
        ],
      },
      {
        label: "Indofood",
        data: [
          {
            label: "Indomobil Sukses Int.",
            value: 234000000,
          },
        ],
      },
      { label: "Anglo Eastern" },
      { label: "IJM" },
    ];
    const mainContainer = document.querySelector("#container");
    const max = 1800000000;
    data.forEach((d) => {
      const chartContainer = document.createElement("div");
      chartContainer.classList.add("container__subchart");
      const chartLabel = document.createElement("h3");
      chartLabel.classList.add("chart-sublabel");
      chartLabel.innerText = d.label;
      chartContainer.appendChild(chartLabel);

      if (d.data) {
        d.data.sort((a, b) => b.value - a.value);
        const chart = sidebar(d.data, max);
        chartContainer.append(chart);
      } else {
        const noData = document.createElement("p");
        noData.classList.add("no-data");
        noData.innerText = "No data available";
        chartContainer.appendChild(noData);
      }
      mainContainer.append(chartContainer);
    });
  });

}());
//# sourceMappingURL=dirty-palm-oil.min.js.map
